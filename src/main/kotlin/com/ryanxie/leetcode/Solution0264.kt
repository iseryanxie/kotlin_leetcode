package com.ryanxie.leetcode

/**
 * Write your thoughts here
 */
class Solution0264 {
    fun nthUglyNumber(n: Int): Int {
        val ugly = IntArray(n)
        ugly[0] = 1
        // ugly numbers are generated by multiplying 2, 3, 5 to previous ugly numbers
        // i2 is the current index of ugly number that is multiplied by 2
        var i2 = 0
        var i3 = 0
        var i5 = 0
        for (i in 1 until n) {
            val next2 = ugly[i2] * 2
            val next3 = ugly[i3] * 3
            val next5 = ugly[i5] * 5
            // next ugly number is the minimum of previous ugly numbers multiplied by 2, 3, 5
            ugly[i] = minOf(next2, next3, next5)
            // if the next ugly number is generated by 2, move i2 to the next index
            if (ugly[i] == next2) i2++
            if (ugly[i] == next3) i3++
            if (ugly[i] == next5) i5++
        }
        return ugly[n - 1]
    }
}